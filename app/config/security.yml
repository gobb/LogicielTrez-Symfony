security:
    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        # our old, basic HTTP authentification is here
        # if your prefer it, just un-comment and comment next section
#        secured_area:
#            pattern:    ^/
#            http_basic:
#                realm: "Vous devez vous authentifier"
#            logout:
#                path: /logout
#                target: /
#                invalidate_session: true
        # a nice OpenID authentification
        main:
            pattern: ^/
            fp_openid:
                create_user_if_not_exists: true
                provider: openid_user_manager
                required_attributes:
                    - contact/email
                remember_me: true
                login_path: /login
            logout: true
            anonymous: true
    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        # then, exceptions: pages for all users
        -
            path: ^/$
            roles: ROLE_USER
        -
            path: ^/logout
            roles: ROLE_USER
        -
            path: ^/user/change_password
            roles: ROLE_USER
        -
            path: ^/exercice/$
            roles: ROLE_USER
        -
            path: ^/budget/\d+$
            roles: ROLE_USER
        -
            path: ^/categorie/\d+$
            roles: ROLE_USER
        -
            path: ^/sous_categorie/\d+$
            roles: ROLE_USER
        -
            path: ^/ligne/\d+$
            roles: ROLE_USER
        -
            path: ^/facture/\d+$
            roles: ROLE_USER
        -
            path: ^/facture/detail/\d+/?\d+$
            roles: ROLE_USER
        # the other pages are only for admins
        -
            path: ^/
            roles: ROLE_ADMIN
    providers:
        openid_user_manager:
            id: trez.logiciel_trez.openid_user_manager
#        chain_provider:
#            chain:
#                providers: [in_memory, database]
#        in_memory:
#            memory:
#                users: %users%
        database:
            entity: { class: TrezLogicielTrezBundle:User, property: username }
    encoders:
        Trez\LogicielTrezBundle\Entity\User: sha512
        Symfony\Component\Security\Core\User\User: plaintext
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        ROLE_USER: IS_AUTHENTICATED_OPENID